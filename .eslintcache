[{"/Users/travisrodgers/Projects/notetaker/src/components/ListItem.jsx":"1","/Users/travisrodgers/Projects/notetaker/src/sections/List.jsx":"2","/Users/travisrodgers/Projects/notetaker/src/components/AddNote.jsx":"3","/Users/travisrodgers/Projects/notetaker/src/components/Search.jsx":"4","/Users/travisrodgers/Projects/notetaker/src/sections/Body.jsx":"5","/Users/travisrodgers/Projects/notetaker/src/components/ListFilters.jsx":"6","/Users/travisrodgers/Projects/notetaker/src/App.js":"7","/Users/travisrodgers/Projects/notetaker/src/sections/Menu.jsx":"8","/Users/travisrodgers/Projects/notetaker/src/components/Profile.jsx":"9","/Users/travisrodgers/Projects/notetaker/src/index.js":"10","/Users/travisrodgers/Projects/notetaker/src/components/TextEditor.jsx":"11","/Users/travisrodgers/Projects/notetaker/src/reportWebVitals.js":"12","/Users/travisrodgers/Projects/notetaker/src/components/EditableTitle.jsx":"13","/Users/travisrodgers/Projects/notetaker/src/sampleData.js":"14","/Users/travisrodgers/Projects/notetaker/src/redux/configureStore.js":"15","/Users/travisrodgers/Projects/notetaker/src/redux/rootReducer.js":"16","/Users/travisrodgers/Projects/notetaker/src/config/firestore.js":"17","/Users/travisrodgers/Projects/notetaker/src/redux/note/noteActions.js":"18","/Users/travisrodgers/Projects/notetaker/src/redux/note/noteReducer.js":"19","/Users/travisrodgers/Projects/notetaker/src/redux/note/noteConstants.js":"20","/Users/travisrodgers/Projects/notetaker/src/components/NotesSkeleton.jsx":"21","/Users/travisrodgers/Projects/notetaker/src/helpers/randomKeyGenerator.js":"22","/Users/travisrodgers/Projects/notetaker/src/helpers/capitalize.js":"23"},{"size":1284,"mtime":1606933810045,"results":"24","hashOfConfig":"25"},{"size":3074,"mtime":1606908209734,"results":"26","hashOfConfig":"25"},{"size":1185,"mtime":1606908389458,"results":"27","hashOfConfig":"25"},{"size":463,"mtime":1606823032692,"results":"28","hashOfConfig":"25"},{"size":260,"mtime":1606565307647,"results":"29","hashOfConfig":"25"},{"size":577,"mtime":1606913553803,"results":"30","hashOfConfig":"25"},{"size":643,"mtime":1606620663375,"results":"31","hashOfConfig":"25"},{"size":3690,"mtime":1607001307521,"results":"32","hashOfConfig":"25"},{"size":747,"mtime":1606525771568,"results":"33","hashOfConfig":"25"},{"size":421,"mtime":1606584570935,"results":"34","hashOfConfig":"25"},{"size":12526,"mtime":1607014247446,"results":"35","hashOfConfig":"25"},{"size":362,"mtime":1606500277573,"results":"36","hashOfConfig":"25"},{"size":1553,"mtime":1607013987489,"results":"37","hashOfConfig":"25"},{"size":13153,"mtime":1606583600887,"results":"38","hashOfConfig":"25"},{"size":255,"mtime":1606591090760,"results":"39","hashOfConfig":"25"},{"size":175,"mtime":1606769652715,"results":"40","hashOfConfig":"25"},{"size":456,"mtime":1606592728541,"results":"41","hashOfConfig":"25"},{"size":2403,"mtime":1606998379971,"results":"42","hashOfConfig":"25"},{"size":3610,"mtime":1607013097790,"results":"43","hashOfConfig":"25"},{"size":967,"mtime":1606948524809,"results":"44","hashOfConfig":"25"},{"size":786,"mtime":1606739065815,"results":"45","hashOfConfig":"25"},{"size":94,"mtime":1606740833167,"results":"46","hashOfConfig":"25"},{"size":128,"mtime":1606741839804,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"ugya3k",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/travisrodgers/Projects/notetaker/src/components/ListItem.jsx",[],["105","106"],"/Users/travisrodgers/Projects/notetaker/src/sections/List.jsx",["107","108"],"import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { Col } from 'antd'\nimport { Typography } from 'antd'\nimport Search from '../components/Search'\nimport AddNote from '../components/AddNote'\nimport ListFilters from '../components/ListFilters'\nimport ListItem from '../components/ListItem'\nimport firebase from '../config/firestore'\nimport NotesSkeleton from '../components/NotesSkeleton'\n\nimport {\n  getNotesBegin,\n  getNotesSuccess,\n  getNotesFailure,\n  getCategories\n} from '../redux/note/noteActions'\n\nconst { Title } = Typography\n\nconst ListSection = () => {\n  const { notes } = useSelector(state => state.note)\n  const searchText = useSelector(state => state.note.searchText)\n  const filteredCategory = useSelector(state => state.note.filteredCategory)\n  const dispatch = useDispatch()\n\n  const combineCategories = array => {\n    const categories = {}\n    array.forEach(element => {\n      if (!Object.keys(categories).length) {\n        categories[element.category] = 1\n      } else {\n        if (element.category in categories) {\n          categories[element.category] += 1\n        } else {\n          categories[element.category] = 1\n        }\n      }\n    })\n    dispatch(getCategories(categories))\n  }\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const db = firebase.firestore()\n      dispatch(getNotesBegin())\n      try {\n        const data = await db.collection('notes').get()\n        const arrayData = data.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        await dispatch(getNotesSuccess(arrayData))\n        await combineCategories(arrayData)\n      } catch (err) {\n        dispatch(getNotesFailure())\n        console.log(err)\n      }\n    }\n    fetchNotes()\n  }, [])\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const db = firebase.firestore()\n      dispatch(getNotesBegin())\n      try {\n        const data = await db.collection('notes').get()\n        const arrayData = data.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        await dispatch(getNotesSuccess(arrayData))\n        await combineCategories(arrayData)\n      } catch (err) {\n        dispatch(getNotesFailure())\n        console.log(err)\n      }\n    }\n    fetchNotes()\n  }, [notes.length])\n\n  useEffect(() => {}, [filteredCategory])\n\n  return (\n    <Col span={8} className='section-wrapper notes-list'>\n      <Title className='category-large' level={3} style={{ padding: '0 20px' }}>\n        General\n      </Title>\n      <ListFilters />\n      <Search />\n      <AddNote />\n      {notes ? (\n        notes\n          .sort((a, b) => (a.date < b.date ? 1 : -1))\n          .map(\n            (note, index) =>\n              (searchText === 0 || note.title.includes(searchText)) &&\n              (!filteredCategory || note.category === filteredCategory) && (\n                <ListItem key={index} {...note} />\n              )\n          )\n      ) : (\n        <NotesSkeleton />\n      )}\n    </Col>\n  )\n}\n\nexport default ListSection\n",["109","110"],"/Users/travisrodgers/Projects/notetaker/src/components/AddNote.jsx",["111","112"],"import React from 'react'\nimport { Button } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addNote, incrementCategoryCount } from '../redux/note/noteActions'\nimport firebase from '../config/firestore'\n\nconst AddNote = () => {\n  const dispatch = useDispatch()\n  const { notes } = useSelector(state => state.note)\n\n  const initialValues = {\n    category: 'general',\n    categoryColor: 'black',\n    date: firebase.firestore.Timestamp.fromDate(new Date()),\n    selected: 'false',\n    title: 'Enter Title',\n    description: 'Enter text...'\n  }\n\n  const addNoteHandler = async () => {\n    const db = firebase.firestore()\n    try {\n      const collection = db.collection('notes')\n      await collection.add({ ...initialValues })\n      dispatch(addNote(initialValues))\n      //dispatch(incrementCategoryCount('general'))\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <div className='add-note'>\n      <Button\n        onClick={addNoteHandler}\n        type='primary'\n        block\n        icon={<PlusOutlined />}\n      >\n        ADD NOTE\n      </Button>\n    </div>\n  )\n}\n\nexport default AddNote\n",["113","114"],"/Users/travisrodgers/Projects/notetaker/src/components/Search.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/sections/Body.jsx",[],["115","116"],"/Users/travisrodgers/Projects/notetaker/src/components/ListFilters.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/App.js",[],["117","118"],"/Users/travisrodgers/Projects/notetaker/src/sections/Menu.jsx",["119","120","121"],"import React, { Component } from 'react'\nimport { Layout, Menu, Badge, Modal } from 'antd'\nimport Profile from '../components/Profile'\nimport { connect } from 'react-redux'\nimport capitalize from '../helpers/capitalize'\nimport { filterByCategory, resetFilter } from '../redux/note/noteActions'\n\nimport {\n  ClearOutlined,\n  TagsOutlined,\n  BarsOutlined,\n  BgColorsOutlined,\n  PlusOutlined\n} from '@ant-design/icons'\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\nclass MenuSection extends Component {\n  state = {\n    collapsed: false,\n    categories: {},\n    isModalVisible: false\n  }\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed })\n  }\n\n  handleOk = () => {\n    this.setState({ isModalVisible: false })\n  }\n\n  handleCancel = () => {\n    this.setState({ isModalVisible: false })\n  }\n\n  showCategoryModal = () => {\n    this.setState({ isModalVisible: !this.state.isModalVisible })\n  }\n\n  componentDidMount() {\n    document\n      .getElementById('tags-plus')\n      .addEventListener('click', this.showCategoryModal)\n  }\n\n  componentWillUnmount() {\n    document\n      .getElementById('tags-plus')\n      .removeEventListener('click', this.showCategoryModal)\n  }\n\n  render() {\n    const { collapsed } = this.state\n    const { isModalVisible } = this.state\n    const categories = this.props.categories\n\n    return (\n      <Sider\n        className='notes-menu'\n        collapsible\n        collapsed={collapsed}\n        onCollapse={this.onCollapse}\n        style={{ padding: '20px 0' }}\n      >\n        <Profile />\n        <Modal\n          title='Basic Modal'\n          visible={isModalVisible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n          <p>Some contents...</p>\n        </Modal>\n        <Menu\n          inlineIndent={20}\n          className='notes-options'\n          theme='dark'\n          defaultOpenKeys={['sub1']}\n          mode='inline'\n        >\n          <SubMenu key='sub1' title='CATEGORIES'>\n            {categories ? (\n              categories.map((category, index) => (\n                <Menu.Item\n                  onClick={() => this.props.filterByCategory(category[0])}\n                  key={index}\n                >\n                  {capitalize(category[0])}\n                  <span>\n                    <Badge count={category[1]} className='site-badge-count-4' />\n                  </span>\n                </Menu.Item>\n              ))\n            ) : (\n              <Menu.Item key={1}>No Categories</Menu.Item>\n            )}\n          </SubMenu>\n          <span>\n            <PlusOutlined id='tags-plus' />\n          </span>\n          <SubMenu key='sub2' title='TAGS'>\n            <Menu.Item key='4'>Team 1</Menu.Item>\n            <Menu.Item key='5'>Team 2</Menu.Item>\n          </SubMenu>\n          <SubMenu key='sub3' title='COLORS'>\n            <Menu.Item key='6'>Team 1</Menu.Item>\n            <Menu.Item key='7'>Team 2</Menu.Item>\n          </SubMenu>\n          <Menu.Item key='8' icon={<ClearOutlined />}>\n            <span onClick={() => this.props.resetFilter()}>Reset</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nfunction mapStateToProps(state, dispatch) {\n  const categories = Object.entries(state.note.categories)\n    ? Object.entries(state.note.categories)\n    : null\n  return { categories: categories }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    filterByCategory: category => {\n      dispatch(filterByCategory(category))\n    },\n    resetFilter: () => dispatch(resetFilter())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuSection)\n// export default MenuSection\n","/Users/travisrodgers/Projects/notetaker/src/components/Profile.jsx",[],["122","123"],"/Users/travisrodgers/Projects/notetaker/src/index.js",[],"/Users/travisrodgers/Projects/notetaker/src/components/TextEditor.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/reportWebVitals.js",[],["124","125"],"/Users/travisrodgers/Projects/notetaker/src/components/EditableTitle.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/sampleData.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/configureStore.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/rootReducer.js",[],"/Users/travisrodgers/Projects/notetaker/src/config/firestore.js",[],["126","127"],"/Users/travisrodgers/Projects/notetaker/src/redux/note/noteActions.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/note/noteReducer.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/note/noteConstants.js",[],"/Users/travisrodgers/Projects/notetaker/src/components/NotesSkeleton.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/helpers/randomKeyGenerator.js",[],"/Users/travisrodgers/Projects/notetaker/src/helpers/capitalize.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":62,"column":6,"nodeType":"134","endLine":62,"endColumn":8,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"133","line":82,"column":6,"nodeType":"134","endLine":82,"endColumn":20,"suggestions":"136"},{"ruleId":"128","replacedBy":"137"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":5,"column":19,"nodeType":"141","messageId":"142","endLine":5,"endColumn":41},{"ruleId":"139","severity":1,"message":"143","line":10,"column":11,"nodeType":"141","messageId":"142","endLine":10,"endColumn":16},{"ruleId":"128","replacedBy":"144"},{"ruleId":"130","replacedBy":"145"},{"ruleId":"128","replacedBy":"146"},{"ruleId":"130","replacedBy":"147"},{"ruleId":"128","replacedBy":"148"},{"ruleId":"130","replacedBy":"149"},{"ruleId":"139","severity":1,"message":"150","line":10,"column":3,"nodeType":"141","messageId":"142","endLine":10,"endColumn":15},{"ruleId":"139","severity":1,"message":"151","line":11,"column":3,"nodeType":"141","messageId":"142","endLine":11,"endColumn":15},{"ruleId":"139","severity":1,"message":"152","line":12,"column":3,"nodeType":"141","messageId":"142","endLine":12,"endColumn":19},{"ruleId":"128","replacedBy":"153"},{"ruleId":"130","replacedBy":"154"},{"ruleId":"128","replacedBy":"155"},{"ruleId":"130","replacedBy":"156"},{"ruleId":"128","replacedBy":"157"},{"ruleId":"130","replacedBy":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'combineCategories' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["161"],["162"],["159"],["160"],"no-unused-vars","'incrementCategoryCount' is defined but never used.","Identifier","unusedVar","'notes' is assigned a value but never used.",["159"],["160"],["159"],["160"],["159"],["160"],"'TagsOutlined' is defined but never used.","'BarsOutlined' is defined but never used.","'BgColorsOutlined' is defined but never used.",["159"],["160"],["159"],["160"],["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [combineCategories, dispatch]",{"range":"167","text":"168"},"Update the dependencies array to be: [combineCategories, dispatch, notes.length]",{"range":"169","text":"170"},[1806,1808],"[combineCategories, dispatch]",[2327,2341],"[combineCategories, dispatch, notes.length]"]