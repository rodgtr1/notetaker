[{"/Users/travisrodgers/Projects/notetaker/src/components/ListItem.jsx":"1","/Users/travisrodgers/Projects/notetaker/src/sections/List.jsx":"2","/Users/travisrodgers/Projects/notetaker/src/components/AddNote.jsx":"3","/Users/travisrodgers/Projects/notetaker/src/components/Search.jsx":"4","/Users/travisrodgers/Projects/notetaker/src/sections/Body.jsx":"5","/Users/travisrodgers/Projects/notetaker/src/components/ListFilters.jsx":"6","/Users/travisrodgers/Projects/notetaker/src/App.js":"7","/Users/travisrodgers/Projects/notetaker/src/sections/Menu.jsx":"8","/Users/travisrodgers/Projects/notetaker/src/components/Profile.jsx":"9","/Users/travisrodgers/Projects/notetaker/src/index.js":"10","/Users/travisrodgers/Projects/notetaker/src/components/TextEditor.jsx":"11","/Users/travisrodgers/Projects/notetaker/src/reportWebVitals.js":"12","/Users/travisrodgers/Projects/notetaker/src/components/EditableTitle.jsx":"13","/Users/travisrodgers/Projects/notetaker/src/sampleData.js":"14","/Users/travisrodgers/Projects/notetaker/src/redux/configureStore.js":"15","/Users/travisrodgers/Projects/notetaker/src/redux/rootReducer.js":"16","/Users/travisrodgers/Projects/notetaker/src/config/firestore.js":"17","/Users/travisrodgers/Projects/notetaker/src/redux/note/noteActions.js":"18","/Users/travisrodgers/Projects/notetaker/src/redux/note/noteReducer.js":"19","/Users/travisrodgers/Projects/notetaker/src/redux/note/noteConstants.js":"20","/Users/travisrodgers/Projects/notetaker/src/components/NotesSkeleton.jsx":"21","/Users/travisrodgers/Projects/notetaker/src/helpers/randomKeyGenerator.js":"22","/Users/travisrodgers/Projects/notetaker/src/helpers/capitalize.js":"23","/Users/travisrodgers/Projects/notetaker/src/components/CategoryManagement.jsx":"24"},{"size":1412,"mtime":1607108777504,"results":"25","hashOfConfig":"26"},{"size":3506,"mtime":1607113044612,"results":"27","hashOfConfig":"26"},{"size":1204,"mtime":1607110589473,"results":"28","hashOfConfig":"26"},{"size":463,"mtime":1606823032692,"results":"29","hashOfConfig":"26"},{"size":260,"mtime":1606565307647,"results":"30","hashOfConfig":"26"},{"size":577,"mtime":1606913553803,"results":"31","hashOfConfig":"26"},{"size":643,"mtime":1606620663375,"results":"32","hashOfConfig":"26"},{"size":4703,"mtime":1607097790434,"results":"33","hashOfConfig":"26"},{"size":747,"mtime":1606525771568,"results":"34","hashOfConfig":"26"},{"size":421,"mtime":1606584570935,"results":"35","hashOfConfig":"26"},{"size":13020,"mtime":1607110852425,"results":"36","hashOfConfig":"26"},{"size":362,"mtime":1606500277573,"results":"37","hashOfConfig":"26"},{"size":1553,"mtime":1607013987489,"results":"38","hashOfConfig":"26"},{"size":13153,"mtime":1606583600887,"results":"39","hashOfConfig":"26"},{"size":255,"mtime":1606591090760,"results":"40","hashOfConfig":"26"},{"size":175,"mtime":1606769652715,"results":"41","hashOfConfig":"26"},{"size":484,"mtime":1607112088746,"results":"42","hashOfConfig":"26"},{"size":2814,"mtime":1607096512091,"results":"43","hashOfConfig":"26"},{"size":4312,"mtime":1607115305084,"results":"44","hashOfConfig":"26"},{"size":1126,"mtime":1607096490258,"results":"45","hashOfConfig":"26"},{"size":786,"mtime":1606739065815,"results":"46","hashOfConfig":"26"},{"size":94,"mtime":1606740833167,"results":"47","hashOfConfig":"26"},{"size":128,"mtime":1606741839804,"results":"48","hashOfConfig":"26"},{"size":3295,"mtime":1607108705069,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"ugya3k",{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/travisrodgers/Projects/notetaker/src/components/ListItem.jsx",["107"],"import React, { useState } from 'react'\nimport { Typography } from 'antd'\nimport { useDispatch } from 'react-redux'\nimport { selectNote } from '../redux/note/noteActions'\nconst { Text } = Typography\n\nconst ListItem = (note, a) => {\n  const dispatch = useDispatch()\n  const timestamp = note.date.toDate()\n\n  const formatDate = date => {\n    const m = date.getMonth() + 1\n    const d = date.getDate()\n    const y = date.getFullYear()\n    return String(`${m}/${d}/${y}`)\n  }\n\n  const handleSelectNote = () => {\n    dispatch(selectNote(note))\n  }\n  return (\n    <div\n      className={`list-item ${note.selected ? 'active' : ''}`}\n      onClick={() => handleSelectNote()}\n      style={{ cursor: 'pointer' }}\n    >\n      <div className='list-item__meta'>\n        <div className='list-item__category'>\n          <span\n            style={{ background: note.categoryColor }}\n            className='list-item__category--color'\n          ></span>\n          <span className='list-item__category--title'>\n            {note.category.toUpperCase()}\n          </span>\n        </div>\n        <div className='list-item__date'>{formatDate(timestamp)}</div>\n      </div>\n      <Text className='list-item__title subtitle' strong>\n        {note.title}\n      </Text>\n      <div className='list-item__preview'>\n        {note.description.substr(0, 90).replace(/(<([^>]+)>)/gi, '')}\n      </div>\n    </div>\n  )\n}\n\nexport default ListItem\n",["108","109"],"/Users/travisrodgers/Projects/notetaker/src/sections/List.jsx",["110","111"],"import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from 'react-redux'\nimport { Col } from 'antd'\nimport { Typography } from 'antd'\nimport Search from '../components/Search'\nimport AddNote from '../components/AddNote'\nimport ListFilters from '../components/ListFilters'\nimport ListItem from '../components/ListItem'\nimport firebase from '../config/firestore'\nimport NotesSkeleton from '../components/NotesSkeleton'\n\nimport {\n  getNotesBegin,\n  getNotesSuccess,\n  getNotesFailure,\n  getCategories\n} from '../redux/note/noteActions'\nimport capitalize from '../helpers/capitalize'\n\nconst { Title } = Typography\n\nconst ListSection = () => {\n  const { notes } = useSelector(state => state.note)\n  const searchText = useSelector(state => state.note.searchText)\n  const filteredCategory = useSelector(state => state.note.filteredCategory)\n  const selectedNote = Object.values(notes).filter(\n    note => note.selected === true\n  )\n\n  const dispatch = useDispatch()\n\n  const combineCategories = array => {\n    const categories = {}\n    array.forEach(element => {\n      if (!Object.keys(categories).length) {\n        categories[element.category] = 1\n      } else {\n        if (element.category in categories) {\n          categories[element.category] += 1\n        } else {\n          categories[element.category] = 1\n        }\n      }\n    })\n    dispatch(getCategories(categories))\n  }\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const db = firebase.firestore()\n      dispatch(getNotesBegin())\n      try {\n        const data = await db.collection('notes').get()\n        const arrayData = data.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        await dispatch(getNotesSuccess(arrayData))\n        await combineCategories(arrayData)\n      } catch (err) {\n        dispatch(getNotesFailure())\n        console.log(err)\n      }\n    }\n    fetchNotes()\n  }, [])\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      const db = firebase.firestore()\n      dispatch(getNotesBegin())\n      try {\n        const data = await db.collection('notes').get()\n        const arrayData = data.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        await dispatch(getNotesSuccess(arrayData))\n        await combineCategories(arrayData)\n      } catch (err) {\n        dispatch(getNotesFailure())\n        console.log(err)\n      }\n    }\n    fetchNotes()\n  }, [notes.length])\n\n  useEffect(() => {}, [filteredCategory])\n\n  return (\n    <Col span={8} className='section-wrapper notes-list'>\n      <Title className='category-large' level={3} style={{ padding: '0 20px' }}>\n        {selectedNote && selectedNote.length\n          ? console.log('first' + selectedNote)\n          : console.log('second' + notes)}\n        {selectedNote && selectedNote.length\n          ? capitalize(selectedNote[0].category)\n          : notes[0]\n          ? capitalize(notes[0].category)\n          : ''}\n      </Title>\n      <ListFilters />\n      <Search />\n      <AddNote />\n      {notes ? (\n        notes\n          .sort((a, b) => (a.date < b.date ? 1 : -1))\n          .map(\n            (note, index) =>\n              (searchText === 0 || note.title.includes(searchText)) &&\n              (!filteredCategory || note.category === filteredCategory) && (\n                <ListItem key={index} {...note} />\n              )\n          )\n      ) : (\n        <NotesSkeleton />\n      )}\n    </Col>\n  )\n}\n\nexport default ListSection\n",["112","113"],"/Users/travisrodgers/Projects/notetaker/src/components/AddNote.jsx",["114"],"import React from 'react'\nimport { Button } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addNote, resetFilter } from '../redux/note/noteActions'\nimport firebase from '../config/firestore'\n\nconst AddNote = () => {\n  const dispatch = useDispatch()\n  const { notes } = useSelector(state => state.note)\n\n  const initialValues = {\n    category: 'general',\n    categoryColor: 'black',\n    date: firebase.firestore.Timestamp.fromDate(new Date()),\n    selected: 'false',\n    title: 'Enter Title',\n    description: 'Enter text...'\n  }\n\n  const addNoteHandler = async () => {\n    const db = firebase.firestore()\n    try {\n      const collection = db.collection('notes')\n      await collection.add({ ...initialValues })\n      dispatch(resetFilter())\n      dispatch(addNote(initialValues))\n      //dispatch(incrementCategoryCount('general'))\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <div className='add-note'>\n      <Button\n        onClick={addNoteHandler}\n        type='primary'\n        block\n        icon={<PlusOutlined />}\n      >\n        ADD NOTE\n      </Button>\n    </div>\n  )\n}\n\nexport default AddNote\n",["115","116"],"/Users/travisrodgers/Projects/notetaker/src/components/Search.jsx",[],["117","118"],"/Users/travisrodgers/Projects/notetaker/src/sections/Body.jsx",[],["119","120"],"/Users/travisrodgers/Projects/notetaker/src/components/ListFilters.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/App.js",[],"/Users/travisrodgers/Projects/notetaker/src/sections/Menu.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/components/Profile.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/index.js",[],["121","122"],"/Users/travisrodgers/Projects/notetaker/src/components/TextEditor.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/reportWebVitals.js",[],"/Users/travisrodgers/Projects/notetaker/src/components/EditableTitle.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/sampleData.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/configureStore.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/rootReducer.js",[],"/Users/travisrodgers/Projects/notetaker/src/config/firestore.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/note/noteActions.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/note/noteReducer.js",[],"/Users/travisrodgers/Projects/notetaker/src/redux/note/noteConstants.js",[],"/Users/travisrodgers/Projects/notetaker/src/components/NotesSkeleton.jsx",[],"/Users/travisrodgers/Projects/notetaker/src/helpers/randomKeyGenerator.js",[],"/Users/travisrodgers/Projects/notetaker/src/helpers/capitalize.js",[],"/Users/travisrodgers/Projects/notetaker/src/components/CategoryManagement.jsx",[],{"ruleId":"123","severity":1,"message":"124","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":67,"column":6,"nodeType":"133","endLine":67,"endColumn":8,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"132","line":87,"column":6,"nodeType":"133","endLine":87,"endColumn":20,"suggestions":"135"},{"ruleId":"127","replacedBy":"136"},{"ruleId":"129","replacedBy":"137"},{"ruleId":"123","severity":1,"message":"138","line":10,"column":11,"nodeType":"125","messageId":"126","endLine":10,"endColumn":16},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"127","replacedBy":"145"},{"ruleId":"129","replacedBy":"146"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'combineCategories' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["149"],["150"],["147"],["148"],"'notes' is assigned a value but never used.",["147"],["148"],["147"],["148"],["147"],["148"],["147"],["148"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [combineCategories, dispatch]",{"range":"155","text":"156"},"Update the dependencies array to be: [combineCategories, dispatch, notes.length]",{"range":"157","text":"158"},[1945,1947],"[combineCategories, dispatch]",[2466,2480],"[combineCategories, dispatch, notes.length]"]